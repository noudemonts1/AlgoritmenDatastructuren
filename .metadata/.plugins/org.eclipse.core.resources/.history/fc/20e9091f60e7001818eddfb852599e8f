package algoritmen.datastructuren.noudfulco.assignment1;

import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.Arrays;
import java.util.Scanner;

public class Main {

//	public static void main(String[] args) {
//		long startTime = System.currentTimeMillis();
//		Box[] boxes = Reader.readFile();
//		Arrays.sort(boxes);
//		Graph graph = new Graph(boxes);
//		int count = 0;
//		while (graph.getNestedBoxes() < boxes.length) {
//			count++;
//			graph.createGraph();
//			graph.dagShortestPaths();
//			graph.removeBoxes(graph.findShortestDist());
//		}
//		System.out.println(count);
//		long endTime = System.currentTimeMillis();
//		System.out.println("Running time = " + (endTime - startTime) + " ms");
//	}
	
	 public static void main(String[] args) throws FileNotFoundException, IOException {
	        // Your final solution should use System.in, but for testing you may
	        // want to read from a file.
	        // Scanner scanner = new Scanner(new File("/some/file"));
	        Scanner scanner = new Scanner(System.in);

	        int n = scanner.nextInt();
	        for (int i = 0; i < n; i++) {
	            // Scanner.nextDouble is pretty slow.
	        	box[i] = Double.parseDouble(scanner.next());
	            double x = Double.parseDouble(scanner.next());
	            double y = Double.parseDouble(scanner.next());
	            double z = Double.parseDouble(scanner.next());
	        }

	        // Print your solution.
	        System.out.println(5);
	    }

}
